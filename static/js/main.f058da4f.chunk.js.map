{"version":3,"sources":["components/video-feed/video-feed.tsx","components/capture-image/capture-image.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","MediaControlCard","mediaProps","classes","useTheme","Card","className","CardContent","Typography","component","variant","color","IconButton","direction","CardMedia","image","title","CaptureImage","FACING_MODE_USER","useState","displayVideoFeed","setDisplayVideoFeed","React","facingMode","setFacingMode","webcamRef","useRef","imgSrc","setImgSrc","videoConstraints","capture","useCallback","imageSrc","current","getScreenshot","Button","size","onClick","endIcon","prevState","audio","ref","screenshotFormat","screenshotQuality","style","position","marginLeft","marginRight","left","right","textAlign","zIndex","src","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f058da4f.chunk.js","sourcesContent":["import {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport { MediaProps } from \"../../interface/media-props.interface\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    details: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    content: {\r\n      flex: \"1 0 auto\",\r\n    },\r\n    cover: {\r\n      width: 151,\r\n    },\r\n    controls: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      paddingLeft: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n      height: 38,\r\n      width: 38,\r\n    },\r\n  })\r\n);\r\n\r\nexport function MediaControlCard(mediaProps: MediaProps) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            Live Feed From Camera\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            Mac Miller\r\n          </Typography>\r\n        </CardContent>\r\n        <div className={classes.controls}>\r\n          <IconButton aria-label=\"previous\">\r\n            {theme.direction === \"rtl\" ? (\r\n              <SkipNextIcon />\r\n            ) : (\r\n              <SkipPreviousIcon />\r\n            )}\r\n          </IconButton>\r\n          <IconButton aria-label=\"play/pause\">\r\n            <PlayArrowIcon className={classes.playIcon} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"next\">\r\n            {theme.direction === \"rtl\" ? (\r\n              <SkipPreviousIcon />\r\n            ) : (\r\n              <SkipNextIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <CardMedia\r\n        className={classes.cover}\r\n        image=\"/static/images/cards/live-from-space.jpg\"\r\n        title=\"Live from space album cover\"\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./capture-image.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\r\nimport { MediaControlCard } from \"../video-feed/video-feed\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const CaptureImage: React.FC = () => {\r\n  const FACING_MODE_USER = \"user\";\r\n  const FACING_MODE_ENVIRONMENT = \"environment\";\r\n\r\n  const [displayVideoFeed, setDisplayVideoFeed] = useState<boolean>(false);\r\n  const [facingMode, setFacingMode] = React.useState(FACING_MODE_USER);\r\n  const webcamRef = useRef<any>(null);\r\n  const [imgSrc, setImgSrc] = useState();\r\n  const videoConstraints = {\r\n    facingMode: facingMode,\r\n  };\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n  }, [webcamRef, setImgSrc]);\r\n  return (\r\n    <div>\r\n      Capture Image or Upload File Component\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onClick={() => {\r\n          displayVideoFeed\r\n            ? setDisplayVideoFeed(false)\r\n            : setDisplayVideoFeed(true);\r\n        }}\r\n        endIcon={displayVideoFeed ? <VideocamIcon /> : <VideocamOffIcon />}\r\n      >\r\n        {!displayVideoFeed ? (\r\n          <div>Enable Video Feed</div>\r\n        ) : (\r\n          <div>Disable Video Feed</div>\r\n        )}\r\n      </Button>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onClick={() => {\r\n          setFacingMode((prevState) =>\r\n            prevState === FACING_MODE_USER\r\n              ? FACING_MODE_ENVIRONMENT\r\n              : FACING_MODE_USER\r\n          );\r\n        }}\r\n        endIcon={displayVideoFeed ? <VideocamIcon /> : <VideocamOffIcon />}\r\n      >\r\n        Switch Camera\r\n      </Button>\r\n      {displayVideoFeed ? (\r\n        <Webcam\r\n          audio={false}\r\n          videoConstraints={videoConstraints}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          screenshotQuality={0.95}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zIndex: 9,\r\n            width: 255,\r\n            height: 255,\r\n          }}\r\n        />\r\n      ) : (\r\n        <div> No Feed </div>\r\n      )}\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onClick={capture}\r\n        endIcon={displayVideoFeed ? <VideocamIcon /> : <VideocamOffIcon />}\r\n      >\r\n        Capture photo\r\n      </Button>\r\n      {<img src={imgSrc ? imgSrc : \"\"} />}\r\n      {MediaControlCard({\r\n        latestImage: \"Hello\",\r\n        imageShots: [{ image: \"Hello\" }],\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CaptureImage } from \"./components/capture-image/capture-image\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      Hello World Yessss!\r\n      <CaptureImage />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}