{"version":3,"sources":["components/video-feed/video-feed.tsx","components/capture-image/capture-image.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","table","minWidth","response","probability","tagId","tagName","MediaControlCard","latestImage","classes","useState","predictedData","setPredictedData","bin","file","BASE64_MARKER","base64Index","indexOf","length","base64","substring","raw","window","atob","rawLength","array","Uint8Array","ArrayBuffer","i","charCodeAt","getBinaryFromFile","axios","method","url","data","headers","then","res","console","log","status","predictions","catch","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","align","TableBody","sort","a","b","map","row","scope","theme","createStyles","root","display","flexDirection","alignItems","button","width","buttonLeft","buttonRight","content","flex","cover","controls","playIcon","height","containerFeed","position","overlayFeed","overlayButtonLeft","bottom","left","color","borderColor","overlayButtonRight","right","CaptureImage","FACING_MODE_USER","useTheme","displayVideoFeed","setDisplayVideoFeed","React","facingMode","setFacingMode","webcamRef","useRef","hiddenFileInput","imgSrc","setImgSrc","videoConstraints","capture","useCallback","current","imageSrc","getScreenshot","click","Card","Button","variant","size","onClick","endIcon","event","preventDefault","audio","ref","screenshotFormat","screenshotQuality","prevState","hidden","src","type","accept","onChange","target","files","substr","Resizer","imageFileResizer","uri","resizeFile","style","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wYAcMA,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAIRC,EAKS,CACX,CACEC,YAAa,UACbC,MAAO,uCACPC,QAAS,wCAEX,CACEF,YAAa,UACbC,MAAO,uCACPC,QAAS,sBAEX,CACEF,YAAa,SACbC,MAAO,uCACPC,QAAS,8BAEX,CACEF,YAAa,UACbC,MAAO,uCACPC,QAAS,wBAEX,CACEF,YAAa,UACbC,MAAO,uCACPC,QAAS,sCAEX,CACEF,YAAa,WACbC,MAAO,uCACPC,QAAS,8BAEX,CACEF,YAAa,WACbC,MAAO,uCACPC,QAAS,4BAEX,CACEF,YAAa,UACbC,MAAO,uCACPC,QAAS,4CAEX,CACEF,YAAa,WACbC,MAAO,uCACPC,QAAS,kCAEX,CACEF,YAAa,YACbC,MAAO,uCACPC,QAAS,wBAEX,CACEF,YAAa,WACbC,MAAO,uCACPC,QAAS,6BAEX,CACEF,YAAa,YACbC,MAAO,uCACPC,QAAS,sBAEX,CACEF,YAAa,YACbC,MAAO,uCACPC,QAAS,uBAEX,CACEF,YAAa,WACbC,MAAO,uCACPC,QAAS,uBAEX,CACEF,YAAa,YACbC,MAAO,uCACPC,QAAS,wBAiBFC,EAAyC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjDC,EAAUV,IAChB,EAA0CW,mBACxCP,GADF,mBAAOQ,EAAP,KAAsBC,EAAtB,KAIA,GAAoB,OAAhBJ,EAAsB,CACxB,IAAMK,EAnBgB,SAACC,GAOzB,IANA,IAAIC,EAAgB,WAChBC,EAAcF,EAAKG,QAAQF,GAAiBA,EAAcG,OAC1DC,EAASL,EAAKM,UAAUJ,GACxBK,EAAMC,OAAOC,KAAKJ,GAClBK,EAAYH,EAAIH,OAChBO,EAAQ,IAAIC,WAAW,IAAIC,YAAYH,IAClCI,EAAI,EAAGA,EAAIJ,EAAWI,IAC7BH,EAAMG,GAAKP,EAAIQ,WAAWD,GAE5B,OAAOH,EASOK,CAAkBtB,GAE9BuB,IAAM,CACJC,OAAQ,OACRC,IAAK,0KACLC,KAAMrB,EACNsB,QAAS,CACP,eAAgB,2BAChB,iBAAkB,sCAGnBC,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACO,MAAfA,EAAIG,QACNF,QAAQC,IAAIF,GACZzB,EAAiByB,EAAIH,KAAKO,cAE1BH,QAAQC,IAAIF,MAGfK,OAAM,SAACL,GACNC,QAAQC,IAAIF,MAIlB,OACE,cAACM,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAWtC,EAAQR,MAAO,aAAW,eAA5C,UACE,cAAC+C,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,8BAGJ,cAACC,EAAA,EAAD,UACGzC,EACE0C,MAAK,SAACC,EAAGC,GAAJ,OAAU,GAAKD,EAAIC,EAAI,GAAK,MACjCC,KAAI,SAACC,GAAD,OACH,eAACR,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWN,UAAU,KAAKc,MAAM,MAAhC,SACGD,EAAInD,UAEP,cAAC4C,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BM,EAAIrD,gBAJjBqD,EAAIpD,kB,4CChJ3BN,EAAYC,aAAW,SAAC2D,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,MAAO,QAETC,WAAY,CACVD,MAAO,OAETE,YAAa,CACXF,MAAO,OAETG,QAAS,CACPC,KAAM,YAERC,MAAO,CACLL,MAAO,SAETM,SAAU,GACVC,SAAU,CACRC,OAAQ,GACRR,MAAO,IAETS,cAAe,CACbC,SAAU,YAEZC,YAAa,GACbC,kBAAmB,CACjBC,OAAQ,MACRC,KAAM,MACNJ,SAAU,WACVK,MAAO,QACPC,YAAa,SAEfC,mBAAoB,CAClBJ,OAAQ,MACRK,MAAO,MACPR,SAAU,WACVK,MAAO,QACPC,YAAa,cAKNG,EAAyB,WACpC,IAEMC,EAAmB,OAEnB7E,EAAUV,IAGhB,GAFcwF,cAEkC7E,oBAAkB,IAAlE,mBAAO8E,EAAP,KAAyBC,EAAzB,KACA,EAAoCC,IAAMhF,SAAS4E,GAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KACMC,EAAYC,iBAAY,MACxBC,EAAkBL,IAAMI,OAAyB,MACvD,EAA4BpF,mBAAc,MAA1C,mBAAOsF,EAAP,KAAeC,EAAf,KACMC,EAAmB,CACvBP,WAAYA,GAkBRQ,EAAUT,IAAMU,aAAY,WAChC,GAAIP,EAAUQ,QAAS,CACrB,IAAMC,EAAWT,EAAUQ,QAAQE,cAjCzB,IACC,KAiCXN,EAAUK,GACVb,GAAoB,OACf,CAAC,IAAD,EACL,UAAAM,EAAgBM,eAAhB,SAAyBG,WAE1B,CAACX,EAAWI,EAAWF,IAC1B,OACE,qBAAKhD,UAAWtC,EAAQoD,KAAxB,SACE,eAAC4C,EAAA,EAAD,CAAM1D,UAAWtC,EAAQ8D,MAAzB,UACE,sBAAKxB,UAAWtC,EAAQwD,OAAxB,UACE,cAACyC,EAAA,EAAD,CACE3D,UAAWtC,EAAQ0D,WACnBwC,QAAQ,WACR1B,MAAM,YACN2B,KAAK,SACLC,QAAS,WAEHpB,GADJD,GAGAS,EAAU,OAEZa,QAAStB,EAAmB,cAAC,IAAD,IAAmB,cAAC,IAAD,IAXjD,SAaIA,EAGA,iDAFA,kDAKJ,cAACkB,EAAA,EAAD,CACE3D,UAAWtC,EAAQ2D,YACnBuC,QAAQ,WACR1B,MAAM,YACN2B,KAAK,SACLC,QAAS,SAACE,GAAW,IAAD,EAClBA,EAAMC,iBACN,UAAAjB,EAAgBM,eAAhB,SAAyBG,QACzBf,GAAoB,IAEtBqB,QAAStB,EAAmB,cAAC,IAAD,IAAmB,cAAC,IAAD,IAVjD,iCAeDA,EACC,sBAAKzC,UAAWtC,EAAQkE,cAAxB,UACE,cAAC,IAAD,CACEsC,OAAO,EACPf,iBAAkBA,EAClBgB,IAAKrB,EACLsB,iBAAiB,aACjBC,kBAAmB,IACnBrE,UAAWtC,EAAQoE,cAErB,cAAC6B,EAAA,EAAD,CACE3D,UAAWtC,EAAQqE,kBACnB6B,QAAQ,WACR1B,MAAM,YACN2B,KAAK,SACLC,QAAS,WACPjB,GAAc,SAACyB,GAAD,OACZA,IAAc/B,EA5FE,cA8FZA,MAGRwB,QACEtB,EAAmB,cAAC,IAAD,IAAmB,cAAC,IAAD,IAb1C,2BAkBA,cAACkB,EAAA,EAAD,CACE3D,UAAWtC,EAAQ0E,mBACnBwB,QAAQ,WACR1B,MAAM,YACN2B,KAAK,SACLC,QAASV,EACTmB,QAAS9B,EACTsB,QACEtB,EAAmB,cAAC,IAAD,IAAmB,cAAC,IAAD,IAR1C,8BAeF,wBAGA,qBACE+B,IAAKvB,GAAkB,GACvBa,QAAS,SAACE,GAAW,IAAD,EAClBA,EAAMC,iBACN,UAAAjB,EAAgBM,eAAhB,SAAyBG,WAI/B,uBACEgB,KAAK,OACLN,IAAKnB,EACL0B,OAAO,UACPC,SAAU,SAACX,GACT,IAAMjG,EAAOiG,EAAMY,OAAOC,MAAM,GAC5B9G,GAAmC,UAA3BA,EAAK0G,KAAKK,OAAO,EAAG,IA1HvB,SAAC/G,GAClBgH,IAAQC,iBACNjH,EAlBU,IACC,IAoBX,OACA,IACA,GACA,SAACkH,GACC/B,EAAU+B,KAEZ,UAgHQC,CAAWnH,IAGfoH,MAAO,CAAEpE,QAAS,UAEpB,cAAC,EAAD,CAAkBtD,YAAawF,UCvMxBmC,EARO,WACpB,OACE,8BACE,cAAC,EAAD,OCQSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBlG,MAAK,YAAkD,IAA/CmG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.62aedd02.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AzureResponse,\r\n  MediaProps,\r\n} from \"../../interface/media-props.interface\";\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 600,\r\n  },\r\n});\r\n\r\nconst response = {\r\n  id: \"8e7fef48-dbfe-4abd-ab3f-cfb8148f41bc\",\r\n  project: \"05f6b2e5-dd5d-4703-a50a-1044b3d7f47a\",\r\n  iteration: \"74f1ef42-5f0e-4e4d-8af3-873d3abf4f34\",\r\n  created: \"2021-07-02T12:57:24.509Z\",\r\n  predictions: [\r\n    {\r\n      probability: 0.35627556,\r\n      tagId: \"c62ceb05-03b6-44e0-b9fd-1670613b8044\",\r\n      tagName: \"Aston Martin Virage Convertible 2012\",\r\n    },\r\n    {\r\n      probability: 0.23506866,\r\n      tagId: \"d2aeb568-ee28-47f8-b0d7-824c4e69641e\",\r\n      tagName: \"Audi R8 Coupe 2012\",\r\n    },\r\n    {\r\n      probability: 0.1911441,\r\n      tagId: \"f8ff2dc8-fcf4-4144-86db-4823f3bbfbc6\",\r\n      tagName: \"AM General Hummer SUV 2000\",\r\n    },\r\n    {\r\n      probability: 0.07213361,\r\n      tagId: \"925ad202-2655-4837-bfd9-3c45ff7c72c8\",\r\n      tagName: \"Acura TL Type-S 2008\",\r\n    },\r\n    {\r\n      probability: 0.03452298,\r\n      tagId: \"57c2b13b-d1b6-4b4a-8a7a-0f36ddf78613\",\r\n      tagName: \"Aston Martin V8 Vantage Coupe 2012\",\r\n    },\r\n    {\r\n      probability: 0.028097242,\r\n      tagId: \"8d9808c8-4d62-4811-bbb5-f3401839e8af\",\r\n      tagName: \"Audi RS 4 Convertible 2008\",\r\n    },\r\n    {\r\n      probability: 0.018102951,\r\n      tagId: \"0bb730d8-0caa-4ab4-918f-d53306a1c52e\",\r\n      tagName: \"Acura ZDX Hatchback 2012\",\r\n    },\r\n    {\r\n      probability: 0.01735906,\r\n      tagId: \"7f525387-f78a-459e-b336-2a26bde97011\",\r\n      tagName: \"Aston Martin V8 Vantage Convertible 2012\",\r\n    },\r\n    {\r\n      probability: 0.014167885,\r\n      tagId: \"ea2301af-757b-4507-be3d-0f25ad7c7306\",\r\n      tagName: \"Aston Martin Virage Coupe 2012\",\r\n    },\r\n    {\r\n      probability: 0.0094606355,\r\n      tagId: \"747e3768-26ee-4e3b-a4fa-ff00ced44139\",\r\n      tagName: \"Acura TSX Sedan 2012\",\r\n    },\r\n    {\r\n      probability: 0.008426548,\r\n      tagId: \"5103f975-8b52-4d4e-a5f8-a0a50e4b4226\",\r\n      tagName: \"Acura Integra Type R 2001\",\r\n    },\r\n    {\r\n      probability: 0.0050876476,\r\n      tagId: \"a1679c36-f17c-4fa7-98f0-00d0fe0d7cb5\",\r\n      tagName: \"Audi A5 Coupe 2012\",\r\n    },\r\n    {\r\n      probability: 0.0038383366,\r\n      tagId: \"92bbb443-127b-4fa4-8935-3ac9f40a3868\",\r\n      tagName: \"Audi TTS Coupe 2012\",\r\n    },\r\n    {\r\n      probability: 0.003788801,\r\n      tagId: \"1d8dfcef-9171-49d7-96cb-25821ab317a7\",\r\n      tagName: \"Acura RL Sedan 2012\",\r\n    },\r\n    {\r\n      probability: 0.0025259769,\r\n      tagId: \"971690ac-6a7b-416e-af0a-25c5265c8936\",\r\n      tagName: \"Acura TL Sedan 2012\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst getBinaryFromFile = (file: string) => {\r\n  var BASE64_MARKER = \";base64,\";\r\n  var base64Index = file.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\r\n  var base64 = file.substring(base64Index);\r\n  var raw = window.atob(base64);\r\n  var rawLength = raw.length;\r\n  var array = new Uint8Array(new ArrayBuffer(rawLength));\r\n  for (let i = 0; i < rawLength; i++) {\r\n    array[i] = raw.charCodeAt(i);\r\n  }\r\n  return array;\r\n};\r\nexport const MediaControlCard: React.FC<MediaProps> = ({ latestImage }) => {\r\n  const classes = useStyles();\r\n  const [predictedData, setPredictedData] = useState<AzureResponse[]>(\r\n    response.predictions\r\n  );\r\n\r\n  if (latestImage !== null) {\r\n    const bin = getBinaryFromFile(latestImage);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"https://vehiclesvisionapi-prediction.cognitiveservices.azure.com/customvision/v3.0/Prediction/969c11ec-fb9a-4e9e-a239-8ab5721f7232/classify/iterations/Iteration1/image\",\r\n      data: bin,\r\n      headers: {\r\n        \"Content-Type\": \"application/octet-stream\", // The essential\r\n        \"Prediction-Key\": \"b03a66429e02441e8be1cd21c3975190\",\r\n      },\r\n    })\r\n      .then((res: any) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          console.log(res);\r\n          setPredictedData(res.data.predictions);\r\n        } else {\r\n          console.log(res);\r\n        }\r\n      })\r\n      .catch((res: any) => {\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>TagName</TableCell>\r\n            <TableCell align=\"right\">Probability</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {predictedData\r\n            .sort((a, b) => 0 - (a > b ? 1 : -1))\r\n            .map((row) => (\r\n              <TableRow key={row.tagId}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.tagName}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.probability}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./capture-image.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\r\nimport { MediaControlCard } from \"../video-feed/video-feed\";\r\nimport { useRef } from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Resizer from \"react-image-file-resizer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    button: {\r\n      width: \"100%\",\r\n    },\r\n    buttonLeft: {\r\n      width: \"50%\",\r\n    },\r\n    buttonRight: {\r\n      width: \"50%\",\r\n    },\r\n    content: {\r\n      flex: \"1 0 auto\",\r\n    },\r\n    cover: {\r\n      width: \"640px\",\r\n    },\r\n    controls: {},\r\n    playIcon: {\r\n      height: 38,\r\n      width: 38,\r\n    },\r\n    containerFeed: {\r\n      position: \"relative\",\r\n    },\r\n    overlayFeed: {},\r\n    overlayButtonLeft: {\r\n      bottom: \"6px\",\r\n      left: \"9px\",\r\n      position: \"absolute\",\r\n      color: \"white\",\r\n      borderColor: \"white\",\r\n    },\r\n    overlayButtonRight: {\r\n      bottom: \"6px\",\r\n      right: \"9px\",\r\n      position: \"absolute\",\r\n      color: \"white\",\r\n      borderColor: \"white\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const CaptureImage: React.FC = () => {\r\n  const WIDTH = 256;\r\n  const HEIGHT = 256;\r\n  const FACING_MODE_USER = \"user\";\r\n  const FACING_MODE_ENVIRONMENT = \"environment\";\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [displayVideoFeed, setDisplayVideoFeed] = useState<boolean>(false);\r\n  const [facingMode, setFacingMode] = React.useState(FACING_MODE_USER);\r\n  const webcamRef = useRef<any>(null);\r\n  const hiddenFileInput = React.useRef<HTMLInputElement>(null);\r\n  const [imgSrc, setImgSrc] = useState<any>(null);\r\n  const videoConstraints = {\r\n    facingMode: facingMode,\r\n  };\r\n\r\n  const resizeFile = (file: File) => {\r\n    Resizer.imageFileResizer(\r\n      file,\r\n      WIDTH,\r\n      HEIGHT,\r\n      \"JPEG\",\r\n      100,\r\n      0,\r\n      (uri) => {\r\n        setImgSrc(uri);\r\n      },\r\n      \"base64\"\r\n    );\r\n  };\r\n\r\n  const capture = React.useCallback(() => {\r\n    if (webcamRef.current) {\r\n      const imageSrc = webcamRef.current.getScreenshot(WIDTH, HEIGHT);\r\n      setImgSrc(imageSrc);\r\n      setDisplayVideoFeed(false);\r\n    } else {\r\n      hiddenFileInput.current?.click();\r\n    }\r\n  }, [webcamRef, setImgSrc, hiddenFileInput]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card className={classes.cover}>\r\n        <div className={classes.button}>\r\n          <Button\r\n            className={classes.buttonLeft}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={() => {\r\n              displayVideoFeed\r\n                ? setDisplayVideoFeed(false)\r\n                : setDisplayVideoFeed(true);\r\n              setImgSrc(null);\r\n            }}\r\n            endIcon={displayVideoFeed ? <VideocamIcon /> : <VideocamOffIcon />}\r\n          >\r\n            {!displayVideoFeed ? (\r\n              <div>Enable Camera</div>\r\n            ) : (\r\n              <div>Disable Camera</div>\r\n            )}\r\n          </Button>\r\n          <Button\r\n            className={classes.buttonRight}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              hiddenFileInput.current?.click();\r\n              setDisplayVideoFeed(false);\r\n            }}\r\n            endIcon={displayVideoFeed ? <VideocamIcon /> : <VideocamOffIcon />}\r\n          >\r\n            Upload a Picture\r\n          </Button>\r\n        </div>\r\n        {displayVideoFeed ? (\r\n          <div className={classes.containerFeed}>\r\n            <Webcam\r\n              audio={false}\r\n              videoConstraints={videoConstraints}\r\n              ref={webcamRef}\r\n              screenshotFormat=\"image/jpeg\"\r\n              screenshotQuality={0.95}\r\n              className={classes.overlayFeed}\r\n            />\r\n            <Button\r\n              className={classes.overlayButtonLeft}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              size=\"medium\"\r\n              onClick={() => {\r\n                setFacingMode((prevState) =>\r\n                  prevState === FACING_MODE_USER\r\n                    ? FACING_MODE_ENVIRONMENT\r\n                    : FACING_MODE_USER\r\n                );\r\n              }}\r\n              endIcon={\r\n                displayVideoFeed ? <VideocamIcon /> : <VideocamOffIcon />\r\n              }\r\n            >\r\n              Switch Camera\r\n            </Button>\r\n            <Button\r\n              className={classes.overlayButtonRight}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              size=\"medium\"\r\n              onClick={capture}\r\n              hidden={!displayVideoFeed}\r\n              endIcon={\r\n                displayVideoFeed ? <VideocamIcon /> : <VideocamOffIcon />\r\n              }\r\n            >\r\n              Capture photo\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {\r\n          <img\r\n            src={imgSrc ? imgSrc : \"\"}\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              hiddenFileInput.current?.click();\r\n            }}\r\n          />\r\n        }\r\n        <input\r\n          type=\"file\"\r\n          ref={hiddenFileInput}\r\n          accept=\"image/*\"\r\n          onChange={(event: any) => {\r\n            const file = event.target.files[0];\r\n            if (file && file.type.substr(0, 5) === \"image\") {\r\n              resizeFile(file);\r\n            }\r\n          }}\r\n          style={{ display: \"none\" }}\r\n        />\r\n        <MediaControlCard latestImage={imgSrc} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CaptureImage } from \"./components/capture-image/capture-image\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <CaptureImage />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}